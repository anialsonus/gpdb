-- start_ignore
! gpconfig -c runaway_detector_activation_percent -v 20;
! gpstop -rai;

CREATE OR REPLACE FUNCTION resGroupPalloc(float) RETURNS int AS
'@abs_builddir@/../regress/regress@DLSUFFIX@', 'resGroupPalloc'
LANGUAGE C READS SQL DATA;

CREATE OR REPLACE FUNCTION resGroupPallocIgnoreStartup(float) RETURNS int AS
'@abs_builddir@/../regress/regress@DLSUFFIX@', 'resGroupPallocIgnoreStartup'
LANGUAGE C READS SQL DATA;
-- end_ignore

ALTER RESOURCE GROUP default_group SET memory_limit 20;
ALTER RESOURCE GROUP admin_group SET memory_limit 10;
ALTER RESOURCE GROUP admin_group set concurrency 1;

5: select * from gp_toolkit.gp_resgroup_config;
5q:

-- This query will be killed by redzone because resGroupPallocIgnoreStartup just allocates
-- the memory size of all resgroup memory. Before startup chunks were considered, a group had no memory tracked
-- at the moment we called resGroupPalloc, so this case shows that now a group tracks startup memory.
5: SELECT resGroupPallocIgnoreStartup(2.39) FROM gp_dist_random('gp_id') WHERE gp_segment_id = 1;
5q:

-- This won't fail because now resGroupPalloc subtracts startup chunks from the requested amount
-- of memory to keep all previews tests intact. Leaving resGroupPalloc without changes may break them.
5: SELECT resGroupPalloc(2.39) FROM gp_dist_random('gp_id') WHERE gp_segment_id = 1;
5q:
