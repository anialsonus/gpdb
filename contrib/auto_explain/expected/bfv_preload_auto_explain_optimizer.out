-- start_ignore
\! gpconfig -c shared_preload_libraries -v 'auto_explain';
20220719:16:46:40:026759 gpconfig:evgeniy-pc:evgeniy-[INFO]:-completed successfully with parameters '-c shared_preload_libraries -v auto_explain'
\! gpstop -raiq;
\c
-- end_ignore
SET auto_explain.log_min_duration = 0;
SET CLIENT_MIN_MESSAGES = LOG;
-- auto_axplain must work only at coordinator with Gp_role is GP_ROLE_DISPATCH
-- check that auto_explain doesn't work on segments which are executors.
-- Query 'CREATE TABLE t1 as select generate_series(1, 1)' and query 'CREATE TABLE t1 as select generate_series(1, 10*1000*1000)'
-- are equally got segfault because it has intermediate executor's slice:
--   Result
--     Output: (generate_series(1, 1))
--       ->  Redistribute Motion 3:3  (slice1; segments: 3)
CREATE TABLE t1 as select generate_series(1, 1);
LOG:  statement: CREATE TABLE t1 as select generate_series(1, 1);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause. Creating a NULL policy entry.
LOG:  duration: 0.005 ms  plan:
Query Text: CREATE TABLE t1 as select generate_series(1, 1);
Result  (cost=0.00..0.00 rows=0 width=0)
  ->  Redistribute Motion 3:3  (slice1; segments: 3)  (cost=0.00..0.01 rows=1 width=4)
        ->  Result  (cost=0.00..0.00 rows=1 width=8)
              ->  Result  (cost=0.00..0.00 rows=1 width=4)
                    One-Time Filter: (gp_execution_segment() = 0)
                    ->  Result  (cost=0.00..0.00 rows=1 width=4)
                          ->  Result  (cost=0.00..0.00 rows=1 width=1)
DROP TABLE t1;
LOG:  statement: DROP TABLE t1;
-- check that auto_explain doesn't work on coordinator with Gp_role is not a GP_ROLE_DISPATCH
-- Query 'SELECT count(1) from (select i from t1 limit 10) t join t2 using (i)' generate executor's slice on coordinator:
--             ->  Redistribute Motion 1:3  (slice2)
--                   Output: t1.i
--                   Hash Key: t1.i
--                   ->  Limit
--                         Output: t1.i
--                         ->  Gather Motion 3:1  (slice1; segments: 3)
-- IMPORTANT: ./configure with --enable-orca
CREATE TABLE t1(i int);
LOG:  statement: CREATE TABLE t1(i int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE t2(i int);
LOG:  statement: CREATE TABLE t2(i int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
SELECT count(1) from (select i from t1 limit 10) t join t2 using (i);
LOG:  statement: SELECT count(1) from (select i from t1 limit 10) t join t2 using (i);
LOG:  statement: SELECT count(1) from (select i from t1 limit 10) t join t2 using (i);  (entry db 127.0.1.1:6000 pid=27339)
LOG:  duration: 2.660 ms  plan:
Query Text: SELECT count(1) from (select i from t1 limit 10) t join t2 using (i);
Aggregate  (cost=0.00..862.00 rows=1 width=8)
  ->  Gather Motion 3:1  (slice3; segments: 3)  (cost=0.00..862.00 rows=1 width=1)
        ->  Hash Join  (cost=0.00..862.00 rows=1 width=1)
              Hash Cond: (t1.i = t2.i)
              ->  Redistribute Motion 1:3  (slice2)  (cost=0.00..431.00 rows=1 width=4)
                    Hash Key: t1.i
                    ->  Limit  (cost=0.00..431.00 rows=1 width=4)
                          ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=0.00..431.00 rows=1 width=4)
                                ->  Seq Scan on t1  (cost=0.00..431.00 rows=1 width=4)
              ->  Hash  (cost=431.00..431.00 rows=1 width=4)
                    ->  Seq Scan on t2  (cost=0.00..431.00 rows=1 width=4)
 count 
-------
     0
(1 row)

DROP TABLE t1;
LOG:  statement: DROP TABLE t1;
DROP TABLE t2;
LOG:  statement: DROP TABLE t2;
-- start_ignore
\! gpconfig -r shared_preload_libraries;
20220719:16:46:44:027342 gpconfig:evgeniy-pc:evgeniy-[INFO]:-completed successfully with parameters '-r shared_preload_libraries'
\! gpstop -raiq;
-- end_ignore
